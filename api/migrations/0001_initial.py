# Generated by Django 3.2 on 2024-04-09 16:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApiInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='已删除')),
                ('platform', models.IntegerField(choices=[(1, 'okx')], default=1, verbose_name='交易所')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('api_name', models.CharField(db_index=True, max_length=32, verbose_name='api备注名')),
                ('flag', models.IntegerField(choices=[(0, '实盘'), (1, '模拟盘')], default=0, verbose_name='API类型')),
                ('passPhrase', models.CharField(max_length=64, verbose_name='密码')),
                ('api_key', models.CharField(max_length=64, verbose_name='APIKEY')),
                ('secret_key', models.CharField(max_length=64, verbose_name='SECRETKEY')),
                ('status', models.IntegerField(choices=[(1, '空闲'), (2, '使用中')], default=1, verbose_name='状态')),
                ('usdt', models.FloatField(default=0, verbose_name='usdt')),
                ('btc', models.FloatField(default=0, verbose_name='btc')),
                ('eth', models.FloatField(default=0, verbose_name='eth')),
                ('pnl', models.FloatField(default=0, verbose_name='已实现跟单收益')),
                ('upl', models.FloatField(default=0, verbose_name='未实现跟单收益')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IpInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(verbose_name='IP地址')),
                ('username', models.CharField(db_index=True, max_length=32, verbose_name='代理用户名')),
                ('password', models.CharField(max_length=64, verbose_name='代理密码')),
                ('countryName', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='地区')),
                ('countdown', models.FloatField(default=30, verbose_name='有效期')),
                ('stop_day', models.FloatField(default=0.5, verbose_name='停止交易时间')),
                ('tips_day', models.FloatField(default=3, verbose_name='提示ip过期时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('experience_day', models.FloatField(default=0, verbose_name='有效天数')),
            ],
        ),
        migrations.CreateModel(
            name='OrderInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, '进行中'), (2, '结束')], default=1, verbose_name='交易状态')),
                ('instId', models.CharField(max_length=32, verbose_name='交易品种')),
                ('cTime', models.BigIntegerField(default=int, verbose_name='开仓时间')),
                ('uTime', models.BigIntegerField(blank=True, default=int, null=True, verbose_name='平仓时间')),
                ('openAvgPx', models.FloatField(default=0, verbose_name='开仓均价')),
                ('closeAvgPx', models.FloatField(blank=True, default=0, null=True, verbose_name='平仓均价')),
                ('pnl', models.FloatField(default=0, verbose_name='已实现收益')),
                ('pnlRatio', models.FloatField(default=0, verbose_name='收益率')),
                ('upl', models.FloatField(default=0, verbose_name='未实现收益')),
                ('uplRatio', models.FloatField(default=0, verbose_name='未实现收益率')),
                ('lever', models.CharField(default='0', max_length=6, verbose_name='杠杆')),
                ('mgnMode', models.CharField(default='cross', max_length=10, verbose_name='保证金模式')),
                ('posSide', models.CharField(max_length=10, verbose_name='持仓方向')),
                ('imr', models.FloatField(default=0, verbose_name='保证金')),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='已删除')),
                ('platform', models.CharField(db_index=True, max_length=32, verbose_name='交易所')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuotaInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pnl_0', models.FloatField(default=0, verbose_name='实盘累计收益')),
                ('upl_0', models.FloatField(default=0, verbose_name='实盘未实现收益')),
                ('pnl_1', models.FloatField(default=0, verbose_name='模拟盘累计收益')),
                ('upl_1', models.FloatField(default=0, verbose_name='模拟盘未实现收益')),
                ('quota_0', models.FloatField(default=100, verbose_name='实盘剩余盈利额度')),
                ('quota_1', models.FloatField(default=100, verbose_name='模拟盘剩余盈利额度')),
            ],
        ),
        migrations.CreateModel(
            name='RedeemCodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=64, verbose_name='兑换码')),
                ('status', models.IntegerField(choices=[(1, '未使用'), (2, '已使用')], default=1, verbose_name='可用状态')),
                ('value', models.FloatField(default=0, verbose_name='兑换金额')),
                ('verification_datetime', models.DateTimeField(auto_now=True, null=True, verbose_name='兑换码验证时间')),
            ],
        ),
        migrations.CreateModel(
            name='SpiderLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(db_index=True, verbose_name='用户ID')),
                ('task_id', models.IntegerField(db_index=True, verbose_name='任务ID')),
                ('date', models.DateTimeField(verbose_name='日志时间戳')),
                ('color', models.CharField(max_length=255, verbose_name='日志级别')),
                ('title', models.CharField(max_length=255, verbose_name='标题')),
                ('description', models.TextField(verbose_name='日志信息')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '爬虫日志',
                'verbose_name_plural': '爬虫日志',
            },
        ),
        migrations.CreateModel(
            name='TaskInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='已删除')),
                ('trader_platform', models.IntegerField(choices=[(1, 'okx')], default=1, verbose_name='交易所')),
                ('uniqueName', models.CharField(max_length=32, verbose_name='交易员交易所ID')),
                ('follow_type', models.IntegerField(choices=[(1, '固定金额'), (2, '固定比例')], default=1, verbose_name='跟单模式')),
                ('sums', models.FloatField(default=0.0, verbose_name='单笔跟单金额')),
                ('ratio', models.FloatField(default=0.0, verbose_name='跟单比例')),
                ('lever_set', models.IntegerField(choices=[(1, '跟随交易员'), (2, '自定义杠杆')], default=1, verbose_name='杠杆设置')),
                ('leverage', models.IntegerField(default=1, verbose_name='杠杆倍数')),
                ('posSide_set', models.IntegerField(default=1, verbose_name='反向跟单')),
                ('first_order_set', models.IntegerField(choices=[(1, '交易员新开订单后跟随')], default=1, verbose_name='首单跟单设置')),
                ('status', models.IntegerField(choices=[(1, '跟单进行中'), (2, '跟单结束'), (3, '自动结束')], default=1, verbose_name='状态')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('pnl', models.FloatField(default=0, verbose_name='已实现跟单收益')),
                ('ip_id', models.IntegerField(null=True, verbose_name='ip的id')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TradeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(db_index=True, verbose_name='用户ID')),
                ('task_id', models.IntegerField(db_index=True, verbose_name='任务ID')),
                ('date', models.DateTimeField(verbose_name='日志时间戳')),
                ('color', models.CharField(max_length=255, verbose_name='日志级别')),
                ('title', models.CharField(max_length=255, verbose_name='标题')),
                ('description', models.TextField(verbose_name='日志信息')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '交易日志',
                'verbose_name_plural': '交易日志',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_index=True, max_length=32, verbose_name='用户名')),
                ('password', models.CharField(max_length=64, verbose_name='密码')),
                ('token', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name='token')),
                ('token_expiry_date', models.DateTimeField(blank=True, null=True, verbose_name='token有效期')),
                ('status', models.IntegerField(choices=[(1, '激活'), (2, '禁用')], default=1, verbose_name='状态')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
        ),
        migrations.AddIndex(
            model_name='userinfo',
            index=models.Index(fields=['username', 'password'], name='idx_name_pwd'),
        ),
        migrations.AddField(
            model_name='taskinfo',
            name='api',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.apiinfo', verbose_name='api'),
        ),
        migrations.AddField(
            model_name='taskinfo',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userinfo', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='redeemcodes',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.userinfo', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='quotainfo',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userinfo', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='orderinfo',
            name='api',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.apiinfo', verbose_name='api'),
        ),
        migrations.AddField(
            model_name='orderinfo',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.taskinfo', verbose_name='任务'),
        ),
        migrations.AddField(
            model_name='orderinfo',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userinfo', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='ipinfo',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userinfo', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='apiinfo',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userinfo', verbose_name='用户'),
        ),
        migrations.AddIndex(
            model_name='orderinfo',
            index=models.Index(fields=['user', 'task'], name='idx_user_task'),
        ),
    ]
